{"ast":null,"code":"var _jsxFileName = \"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/CreateNFT/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStyles } from \"./styles.js\";\nimport DropZone from \"../../components/DropZone\";\nimport { api } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNFT = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const account = useSelector(state => state.allNft.account);\n  const artTokenContract = useSelector(state => state.allNft.artTokenContract);\n  const [selectedFile, setSelectedFile] = useState();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    price: \"\"\n  });\n\n  function handleInputChange(event) {\n    let {\n      name,\n      value\n    } = event.target; // if(name === 'image'){\n    //   value = event.target.files[0];\n    // }\n\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  async function createNFT(event) {\n    event.preventDefault();\n    const {\n      title,\n      description\n    } = formData;\n    console.log(\"title: \" + title);\n    const data = new FormData();\n    data.append(\"name\", title);\n    data.append(\"description\", description);\n\n    if (selectedFile) {\n      data.append('img', selectedFile);\n      console.log(\"slectedFile: \", selectedFile);\n    }\n\n    try {\n      const totalSupply = await artTokenContract.methods.totalSupply().call();\n      data.append(\"tokenId\", Number(totalSupply) + 1);\n      const response = await api.post(\"/tokens\", data, {\n        headers: {\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`\n        }\n      });\n      console.log(response);\n      mint(response.data.message);\n    } catch (error) {\n      console.log(error); // error.response.data\n    }\n  }\n\n  async function mint(tokenMetadataURL) {\n    try {\n      const receipt = await artTokenContract.methods.mint(tokenMetadataURL).send({\n        from: account\n      });\n      console.log(receipt);\n      console.log(receipt.events.Transfer.returnValues.tokenId); // setItems(items => [...items, {\n      //   tokenId: receipt.events.Transfer.returnValues.tokenId,\n      //   creator: accounts[0],\n      //   owner: accounts[0],\n      //   uri: tokenMetadataURL,\n      //   isForSale: false,\n      //   saleId: null,\n      //   price: 0,\n      //   isSold: null\n      // }]);\n\n      history.push('/');\n    } catch (error) {\n      console.error(\"Error, minting: \", error);\n      alert(\"Error while minting!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.pageCreateNft,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createNFT,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create collectible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(CancelOutlinedIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropzone,\n          children: /*#__PURE__*/_jsxDEV(DropZone, {\n            onFileUploaded: setSelectedFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            name: \"title\",\n            variant: \"filled\",\n            required: true,\n            value: formData.title,\n            onChange: handleInputChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-multiline-static\",\n            multiline: true,\n            rows: 4,\n            label: \"Description\",\n            name: \"description\",\n            variant: \"filled\",\n            required: true,\n            value: formData.description,\n            onChange: handleInputChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"price\",\n            name: \"price\",\n            variant: \"filled\",\n            value: formData.price,\n            onChange: handleInputChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: \"ETH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateNFT, \"D94otKyPNztDYCsk7oX9nw/RCcU=\", false, function () {\n  return [useStyles, useHistory, useSelector, useSelector];\n});\n\n_c = CreateNFT;\nexport default CreateNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNFT\");","map":{"version":3,"sources":["/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/CreateNFT/index.js"],"names":["React","useState","useSelector","Link","useHistory","CancelOutlinedIcon","InputAdornment","TextField","Button","useStyles","DropZone","api","CreateNFT","classes","history","account","state","allNft","artTokenContract","selectedFile","setSelectedFile","formData","setFormData","title","description","price","handleInputChange","event","name","value","target","createNFT","preventDefault","console","log","data","FormData","append","totalSupply","methods","call","Number","response","post","headers","_boundary","mint","message","error","tokenMetadataURL","receipt","send","from","events","Transfer","returnValues","tokenId","push","alert","pageCreateNft","formHeader","content","dropzone","startAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CancelOutlinedIcon  from \"@material-ui/icons/CancelOutlined\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { useStyles } from \"./styles.js\";\n\nimport DropZone from \"../../components/DropZone\";\n\nimport { api } from \"../../services/api\";\n\nconst CreateNFT = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const account = useSelector((state) => state.allNft.account);\n  const artTokenContract = useSelector(\n    (state) => state.allNft.artTokenContract\n  );\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    price: \"\",\n  });\n\n  function handleInputChange(event) {\n    let { name, value } = event.target;\n    // if(name === 'image'){\n    //   value = event.target.files[0];\n    // }\n    setFormData({ ...formData, [name]: value });\n  }\n\n  async function createNFT(event) {\n    event.preventDefault();\n    const { title, description } = formData;\n\n    console.log(\"title: \" + title);\n\n    const data = new FormData();\n    data.append(\"name\", title);\n    data.append(\"description\", description);\n\n    if(selectedFile){\n      data.append('img', selectedFile);\n      console.log(\"slectedFile: \", selectedFile);\n    }\n\n    try {\n      const totalSupply = await artTokenContract.methods.totalSupply().call();\n      data.append(\"tokenId\", Number(totalSupply) + 1);\n\n      const response = await api.post(\"/tokens\", data, {\n        headers: {\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        },\n      });\n      console.log(response);\n\n      mint(response.data.message);\n    } catch (error) {\n      console.log(error);\n      // error.response.data\n    }\n  }\n\n  async function mint(tokenMetadataURL) {\n    try {\n      const receipt = await artTokenContract.methods\n        .mint(tokenMetadataURL)\n        .send({ from: account });\n      console.log(receipt);\n      console.log(receipt.events.Transfer.returnValues.tokenId);\n      // setItems(items => [...items, {\n      //   tokenId: receipt.events.Transfer.returnValues.tokenId,\n      //   creator: accounts[0],\n      //   owner: accounts[0],\n      //   uri: tokenMetadataURL,\n      //   isForSale: false,\n      //   saleId: null,\n      //   price: 0,\n      //   isSold: null\n      // }]);\n      history.push('/');\n    } catch (error) {\n      console.error(\"Error, minting: \", error);\n      alert(\"Error while minting!\");\n    }\n  }\n\n  return (\n    <div className={classes.pageCreateNft}>\n      <form onSubmit={createNFT}>\n        <div className={classes.formHeader}>\n          <h1>Create collectible</h1>\n          <Link to=\"/\">\n            <CancelOutlinedIcon fontSize=\"large\" />\n          </Link>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.dropzone}>\n            <DropZone onFileUploaded={setSelectedFile} />\n          </div>\n          <fieldset>\n            <TextField\n              label=\"Title\"\n              name=\"title\"\n              variant=\"filled\"\n              required\n              value={formData.title}\n              onChange={handleInputChange}\n              fullWidth\n            />\n            <TextField\n              id=\"outlined-multiline-static\"\n              multiline\n              rows={4}\n              label=\"Description\"\n              name=\"description\"\n              variant=\"filled\"\n              required\n              value={formData.description}\n              onChange={handleInputChange}\n              fullWidth\n            />\n            <TextField\n              label=\"price\"\n              name=\"price\"\n              variant=\"filled\"\n              value={formData.price}\n              onChange={handleInputChange}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n              }}\n              fullWidth\n            />\n\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </fieldset>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateNFT;\n"]},"metadata":{},"sourceType":"module"}