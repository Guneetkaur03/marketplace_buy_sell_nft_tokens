{"ast":null,"code":"var _jsxFileName = \"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport getWeb3 from \"../../utils/getWeb3\";\nimport { api } from \"../../services/api\";\nimport ArtMarketplace from \"../../contracts/MyMarketplace.json\";\nimport ArtToken from \"../../contracts/MyToken.json\";\nimport { setNft, setAccount, setTokenContract, setMarketContract } from \"../../redux/actions/nftActions\";\nimport Card from \"../../components/Card\";\nimport { useStyles } from \"./styles.js\";\nimport veterans from \"../../assets/arts/Sparse-Ahmed-Mostafa-vetarans-2.jpg\";\nimport lionKing from \"../../assets/arts/suresh-pydikondala-lion.jpg\";\nimport dreaming from \"../../assets/arts/phuongvp-maybe-i-m-dreaming-by-pvpgk-deggyli.jpg\";\nimport modeling3d from \"../../assets/arts/alan-linssen-alanlinssen-kitbashkitrender2.jpg\";\nimport woman from \"../../assets/arts/ashline-sketch-brushes-3-2.jpg\";\nimport stones from \"../../assets/arts/rentao_-22-10-.jpg\";\nimport wale from \"../../assets/arts/luzhan-liu-1-1500.jpg\";\nimport comic from \"../../assets/arts/daniel-taylor-black-and-white-2019-2.jpg\";\nimport galerie from \"../../assets/galerie.svg\";\nimport doodle from \"../../assets/bg.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const classes = useStyles();\n  const nft = useSelector(state => state.allNft.nft);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let itemsList = [];\n\n    const init = async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n\n        if (typeof accounts === undefined) {\n          alert(\"Please login with Metamask!\");\n          console.log(\"login to metamask\");\n        }\n\n        const networkId = await web3.eth.net.getId();\n\n        try {\n          const artTokenContract = new web3.eth.Contract(ArtToken.abi, ArtToken.networks[networkId].address); // console.log(\"Contract: \", artTokenContract);\n\n          const marketplaceContract = new web3.eth.Contract(ArtMarketplace.abi, ArtMarketplace.networks[networkId].address);\n          const totalSupply = await artTokenContract.methods.totalSupply().call();\n          const totalItemsForSale = await marketplaceContract.methods.totalItemsForSale().call();\n\n          for (var tokenId = 1; tokenId <= totalSupply; tokenId++) {\n            let item = await artTokenContract.methods.Items(tokenId).call();\n            let owner = await artTokenContract.methods.ownerOf(tokenId).call();\n            const response = await api.get(`/tokens/${tokenId}`).catch(err => {\n              console.log(\"Err: \", err);\n            });\n            console.log(\"response: \", response);\n            itemsList.push({\n              name: response.data.name,\n              description: response.data.description,\n              image: response.data.image,\n              tokenId: item.id,\n              creator: item.creator,\n              owner: owner,\n              uri: item.uri,\n              isForSale: false,\n              saleId: null,\n              price: 0,\n              isSold: null\n            });\n          }\n\n          if (totalItemsForSale > 0) {\n            for (var saleId = 0; saleId < totalItemsForSale; saleId++) {\n              let item = await marketplaceContract.methods.itemsForSale(saleId).call();\n              let active = await marketplaceContract.methods.activeItems(item.tokenId).call();\n              let itemListIndex = itemsList.findIndex(i => i.tokenId === item.tokenId);\n              itemsList[itemListIndex] = { ...itemsList[itemListIndex],\n                isForSale: active,\n                saleId: item.id,\n                price: item.price,\n                isSold: item.isSold\n              };\n            }\n          }\n\n          dispatch(setAccount(accounts[0]));\n          dispatch(setTokenContract(artTokenContract));\n          dispatch(setMarketContract(marketplaceContract));\n          dispatch(setNft(itemsList));\n        } catch (error) {\n          console.error(\"Error\", error);\n          alert(\"Contracts not deployed to the current network \" + networkId.toString());\n        }\n      } catch (error) {\n        alert(`Failed to load web3, accounts, or contract. Check console for details.` + error);\n        console.error(error);\n      }\n    };\n\n    init();\n  }, [dispatch]);\n  console.log(\"Nft :\", nft);\n  const nftItem = useSelector(state => state.allNft.nft);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.banner,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        xs: 12,\n        className: classes.gridBanner,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"dreaming\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"veterans\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"modeling3d\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"lionKing\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          className: classes.main,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: doodle,\n            alt: \"galerie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.content,\n            children: \"A college notes NFT marketplace, where you can trade your work.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create-nft\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              disableElevation: true,\n              children: \"Start Minting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"dreaming\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"veterans\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"modeling3d\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: doodle,\n                alt: \"lionKing\",\n                className: classes.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.allNfts,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        children: \"Best Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: nftItem.map(nft => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, { ...nft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, nft.tokenId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"wWY8uPkFr5kKirMM14Y9oqw3AM4=\", false, function () {\n  return [useStyles, useSelector, useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Home/index.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Grid","Typography","Button","getWeb3","api","ArtMarketplace","ArtToken","setNft","setAccount","setTokenContract","setMarketContract","Card","useStyles","veterans","lionKing","dreaming","modeling3d","woman","stones","wale","comic","doodle","Home","classes","nft","state","allNft","dispatch","itemsList","init","web3","accounts","eth","getAccounts","undefined","alert","console","log","networkId","net","getId","artTokenContract","Contract","abi","networks","address","marketplaceContract","totalSupply","methods","call","totalItemsForSale","tokenId","item","Items","owner","ownerOf","response","get","catch","err","push","name","data","description","image","id","creator","uri","isForSale","saleId","price","isSold","itemsForSale","active","activeItems","itemListIndex","findIndex","i","error","toString","nftItem","homepage","banner","gridBanner","images","main","content","allNfts","title","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\n\nimport getWeb3 from \"../../utils/getWeb3\";\nimport { api } from \"../../services/api\";\n\nimport ArtMarketplace from \"../../contracts/MyMarketplace.json\";\nimport ArtToken from \"../../contracts/MyToken.json\";\n\nimport {\n  setNft,\n  setAccount,\n  setTokenContract,\n  setMarketContract,\n} from \"../../redux/actions/nftActions\";\nimport Card from \"../../components/Card\";\n\nimport { useStyles } from \"./styles.js\";\n\nimport veterans from \"../../assets/arts/Sparse-Ahmed-Mostafa-vetarans-2.jpg\";\nimport lionKing from \"../../assets/arts/suresh-pydikondala-lion.jpg\";\nimport dreaming from \"../../assets/arts/phuongvp-maybe-i-m-dreaming-by-pvpgk-deggyli.jpg\";\nimport modeling3d from \"../../assets/arts/alan-linssen-alanlinssen-kitbashkitrender2.jpg\";\nimport woman from \"../../assets/arts/ashline-sketch-brushes-3-2.jpg\";\nimport stones from \"../../assets/arts/rentao_-22-10-.jpg\";\nimport wale from \"../../assets/arts/luzhan-liu-1-1500.jpg\";\nimport comic from \"../../assets/arts/daniel-taylor-black-and-white-2019-2.jpg\";\nimport galerie from \"../../assets/galerie.svg\";\nimport doodle from \"../../assets/bg.jpeg\";\n\n\nconst Home = () => {\n  const classes = useStyles();\n  const nft = useSelector((state) => state.allNft.nft);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let itemsList = [];\n    const init = async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n\n        if (typeof accounts === undefined) {\n          alert(\"Please login with Metamask!\");\n          console.log(\"login to metamask\");\n        }\n\n        const networkId = await web3.eth.net.getId();\n        try {\n          const artTokenContract = new web3.eth.Contract(\n            ArtToken.abi,\n            ArtToken.networks[networkId].address\n          );\n          // console.log(\"Contract: \", artTokenContract);\n          const marketplaceContract = new web3.eth.Contract(\n            ArtMarketplace.abi,\n            ArtMarketplace.networks[networkId].address\n          );\n          const totalSupply = await artTokenContract.methods\n            .totalSupply()\n            .call();\n          const totalItemsForSale = await marketplaceContract.methods\n            .totalItemsForSale()\n            .call();\n\n          for (var tokenId = 1; tokenId <= totalSupply; tokenId++) {\n            let item = await artTokenContract.methods.Items(tokenId).call();\n            let owner = await artTokenContract.methods.ownerOf(tokenId).call();\n\n            const response = await api\n              .get(`/tokens/${tokenId}`)\n              .catch((err) => {\n                console.log(\"Err: \", err);\n              });\n            console.log(\"response: \", response);\n\n            itemsList.push({\n              name: response.data.name,\n              description: response.data.description,\n              image: response.data.image,\n              tokenId: item.id,\n              creator: item.creator,\n              owner: owner,\n              uri: item.uri,\n              isForSale: false,\n              saleId: null,\n              price: 0,\n              isSold: null,\n            });\n          }\n          if (totalItemsForSale > 0) {\n            for (var saleId = 0; saleId < totalItemsForSale; saleId++) {\n              let item = await marketplaceContract.methods\n                .itemsForSale(saleId)\n                .call();\n              let active = await marketplaceContract.methods\n                .activeItems(item.tokenId)\n                .call();\n\n              let itemListIndex = itemsList.findIndex(\n                (i) => i.tokenId === item.tokenId\n              );\n\n              itemsList[itemListIndex] = {\n                ...itemsList[itemListIndex],\n                isForSale: active,\n                saleId: item.id,\n                price: item.price,\n                isSold: item.isSold,\n              };\n            }\n          }\n\n          dispatch(setAccount(accounts[0]));\n          dispatch(setTokenContract(artTokenContract));\n          dispatch(setMarketContract(marketplaceContract));\n          dispatch(setNft(itemsList));\n        } catch (error) {\n          console.error(\"Error\", error);\n          alert(\n            \"Contracts not deployed to the current network \" +\n              networkId.toString()\n          );\n        }\n      } catch (error) {\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.` +\n            error\n        );\n        console.error(error);\n      }\n    };\n    init();\n  }, [dispatch]);\n\n  console.log(\"Nft :\", nft);\n\n  const nftItem = useSelector((state) => state.allNft.nft);\n\n  return (\n    <div className={classes.homepage}>\n      <section className={classes.banner}>\n        <Grid container spacing={0} xs={12} className={classes.gridBanner}>\n          <Grid item xs={4}>\n            <Grid container spacing={0}>\n              <Grid item xs={8}>\n                <img src={doodle} alt=\"dreaming\" className={classes.images} />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={doodle} alt=\"veterans\" className={classes.images} />\n              </Grid>\n              <Grid item xs={7}>\n                <img src={doodle} alt=\"modeling3d\" className={classes.images} />\n              </Grid>\n              <Grid item xs={5}>\n                <img src={doodle} alt=\"lionKing\" className={classes.images} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={4} className={classes.main}>\n            <img src={doodle} alt=\"galerie\" />\n            <Typography className={classes.content}>A college notes NFT marketplace, where you can trade your work.</Typography>\n            <Link to=\"/create-nft\">\n              <Button variant=\"contained\" color=\"primary\" disableElevation>\n                Start Minting\n              </Button>\n            </Link>\n          </Grid>\n          <Grid item xs={4}>\n            <Grid container spacing={0}>\n              <Grid item xs={8}>\n                <img src={doodle} alt=\"dreaming\" className={classes.images} />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={doodle} alt=\"veterans\" className={classes.images} />\n              </Grid>\n              <Grid item xs={7}>\n                <img src={doodle} alt=\"modeling3d\" className={classes.images} />\n              </Grid>\n              <Grid item xs={5}>\n                <img src={doodle} alt=\"lionKing\" className={classes.images} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </section>\n      <section className={classes.allNfts}>\n        <Typography className={classes.title}>Best Notes</Typography>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {nftItem.map((nft) => (\n            <Grid item key={nft.tokenId}>\n              <Card {...nft} />\n            </Grid>\n          ))}\n        </Grid>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}