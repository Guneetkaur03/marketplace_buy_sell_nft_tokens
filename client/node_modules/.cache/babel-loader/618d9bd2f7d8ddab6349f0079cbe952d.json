{"ast":null,"code":"var _jsxFileName = \"/Users/guneet/Downloads/Fall2022/Blockchain/myproject/Marketplace/client/src/components/DropZone/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { useStyles } from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropZone = ({\n  onFileUploaded\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const fileUrl = URL.createObjectURL(file);\n    setSelectedFileUrl(fileUrl);\n    onFileUploaded(file);\n  }, [onFileUploaded]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dropzone,\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), selectedFileUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedFileUrl,\n      alt: \"Point thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), \"NFT image\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropZone, \"Uy2lWfx2C+EoCCSMVtYSSoNZhnI=\", false, function () {\n  return [useStyles, useDropzone];\n});\n\n_c = DropZone;\nexport default DropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"sources":["/Users/guneet/Downloads/Fall2022/Blockchain/myproject/Marketplace/client/src/components/DropZone/index.js"],"names":["React","useState","useCallback","useDropzone","CloudUploadIcon","useStyles","DropZone","onFileUploaded","classes","selectedFileUrl","setSelectedFileUrl","onDrop","acceptedFiles","file","fileUrl","URL","createObjectURL","getRootProps","getInputProps","accept","dropzone"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,SAASC,SAAT,QAA0B,aAA1B;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AACxC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMU,MAAM,GAAGT,WAAW,CAACU,aAAa,IAAI;AAC1C,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AAEA,UAAME,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AAEAH,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACAP,IAAAA,cAAc,CAACM,IAAD,CAAd;AACD,GAPyB,EAOvB,CAACN,cAAD,CAPuB,CAA1B;AASA,QAAM;AAAEU,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCf,WAAW,CAAC;AAClDQ,IAAAA,MADkD;AAElDQ,IAAAA,MAAM,EAAE;AAF0C,GAAD,CAAnD;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,QAAxB;AAAA,OAAsCH,YAAY,EAAlD;AAAA,4BACE,sBAAWC,aAAa,EAAxB;AAA4B,MAAA,MAAM,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAGIT,eAAe,gBACb;AAAK,MAAA,GAAG,EAAEA,eAAV;AAA2B,MAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb;AAAA,8BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjCD;;GAAMH,Q;UACYD,S,EAYwBF,W;;;KAbpCG,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport { useStyles } from \"./styles.js\";\n\n\nconst DropZone = ({ onFileUploaded })  => {\n  const classes = useStyles();\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n     \n    const fileUrl = URL.createObjectURL(file);\n    \n    setSelectedFileUrl(fileUrl);\n    onFileUploaded(file);\n  }, [onFileUploaded]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop, \n    accept: 'image/*'\n  });\n\n  return (\n    <div className={classes.dropzone} {...getRootProps()}>\n      <input {...getInputProps()} accept='image/*' />\n\n      { selectedFileUrl \n        ? <img src={selectedFileUrl} alt=\"Point thumbnail\"/>\n        : (\n          <p>\n            <CloudUploadIcon />\n            NFT image\n          </p>\n        )\n      }\n    </div>\n  );\n}\n\nexport default DropZone;"]},"metadata":{},"sourceType":"module"}