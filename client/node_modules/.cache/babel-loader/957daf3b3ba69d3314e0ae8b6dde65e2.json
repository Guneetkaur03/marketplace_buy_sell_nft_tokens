{"ast":null,"code":"var _jsxFileName = \"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Item/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Web3 from \"web3\";\nimport { selectedNft, removeSelectedNft } from \"../../redux/actions/nftActions\";\nimport { useStyles } from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    nftId\n  } = useParams();\n  const marketplaceContract = useSelector(state => state.allNft.marketplaceContract);\n  const account = useSelector(state => state.allNft.account);\n  let nft = useSelector(state => state.nft);\n  let nftItem = useSelector(state => state.allNft.nft.filter(nft => nft.tokenId === nftId));\n  const {\n    image,\n    name,\n    price,\n    owner,\n    creator,\n    description,\n    tokenId,\n    saleId,\n    isForSale,\n    isSold\n  } = nft;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (nftId && nftId !== \"\" && nftItem) dispatch(selectedNft(nftItem[0]));\n    return () => {\n      dispatch(removeSelectedNft());\n    };\n  }, [nftId]);\n\n  async function putForSale(id, price) {\n    try {\n      // const itemIdex = getItemIndexBuyTokenId(id);\n      // const marketAddress = ArtMarketplace.networks[1337].address;\n      // await artTokenContract.methods.approve(marketAddress, items[itemIdex].tokenId).send({from: accounts[0]});\n      const receipt = await marketplaceContract.methods.putItemForSale(id, price).send({\n        gas: 210000,\n        from: account\n      });\n      console.log(receipt);\n    } catch (error) {\n      console.error(\"Error, puting for sale: \", error);\n      alert(\"Error while puting for sale!\");\n    }\n  }\n\n  async function buy(saleId, price) {\n    try {\n      const receipt = await marketplaceContract.methods.buyItem(saleId).send({\n        gas: 210000,\n        value: price,\n        from: account\n      });\n      console.log(receipt);\n      const id = receipt.events.itemSold.id; ///saleId\n    } catch (error) {\n      console.error(\"Error, buying: \", error);\n      alert(\"Error while buying!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.pageItem,\n    children: Object.keys(nft).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"...CARREGANDO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: classes.pageHeader,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(KeyboardBackspaceIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0,\n          alignItems: \"center\",\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 7,\n            sm: 7,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"ui fluid image\",\n                src: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 5,\n            sm: 5,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"creator\",\n                name: \"creator\",\n                variant: \"filled\",\n                margin: \"dense\",\n                fullWidth: true,\n                disabled: true,\n                defaultValue: creator.slice(0, 7) + \"...\" + creator.slice(-4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"owner\",\n                name: \"owner\",\n                variant: \"filled\",\n                disabled: true,\n                fullWidth: true,\n                margin: \"dense\",\n                defaultValue: owner.slice(0, 7) + \"...\" + owner.slice(-4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-multiline-static\",\n                multiline: true,\n                rows: 4,\n                label: \"Description\",\n                name: \"description\",\n                variant: \"filled\",\n                margin: \"dense\",\n                disabled: true,\n                fullWidth: true,\n                defaultValue: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"price\",\n                name: \"price\",\n                variant: \"filled\",\n                margin: \"dense\",\n                defaultValue: Web3.utils.fromWei(String(price), \"ether\"),\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"ETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this)\n                },\n                fullWidth: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), owner === account && !isForSale && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => putForSale(tokenId, 200),\n                children: \"Sell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), owner !== account && isForSale && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => buy(saleId, 200),\n                children: \"Buy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Item, \"jVIqWID5rI1hh2i5yhnqAZ5gu/E=\", false, function () {\n  return [useStyles, useParams, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Item/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","Link","Button","KeyboardBackspaceIcon","InputAdornment","TextField","Grid","Web3","selectedNft","removeSelectedNft","useStyles","Item","classes","nftId","marketplaceContract","state","allNft","account","nft","nftItem","filter","tokenId","image","name","price","owner","creator","description","saleId","isForSale","isSold","dispatch","putForSale","id","receipt","methods","putItemForSale","send","gas","from","console","log","error","alert","buy","buyItem","value","events","itemSold","pageItem","Object","keys","length","pageHeader","slice","utils","fromWei","String","startAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Web3 from \"web3\";\n\nimport { selectedNft, removeSelectedNft } from \"../../redux/actions/nftActions\";\n\nimport { useStyles } from \"./styles.js\";\n\nconst Item = () => {\n  const classes = useStyles();\n\n  const { nftId } = useParams();\n  const marketplaceContract = useSelector(\n    (state) => state.allNft.marketplaceContract\n  );\n  const account = useSelector((state) => state.allNft.account);\n  let nft = useSelector((state) => state.nft);\n  let nftItem = useSelector((state) =>\n    state.allNft.nft.filter((nft) => nft.tokenId === nftId)\n  );\n  const {\n    image,\n    name,\n    price,\n    owner,\n    creator,\n    description,\n    tokenId,\n    saleId,\n    isForSale,\n    isSold,\n  } = nft;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (nftId && nftId !== \"\" && nftItem) dispatch(selectedNft(nftItem[0]));\n    return () => {\n      dispatch(removeSelectedNft());\n    };\n  }, [nftId]);\n\n  async function putForSale(id, price) {\n    try {\n      // const itemIdex = getItemIndexBuyTokenId(id);\n\n      // const marketAddress = ArtMarketplace.networks[1337].address;\n      // await artTokenContract.methods.approve(marketAddress, items[itemIdex].tokenId).send({from: accounts[0]});\n\n      const receipt = await marketplaceContract.methods\n        .putItemForSale(id, price)\n        .send({ gas: 210000, from: account });\n      console.log(receipt);\n    } catch (error) {\n      console.error(\"Error, puting for sale: \", error);\n      alert(\"Error while puting for sale!\");\n    }\n  }\n\n  async function buy(saleId, price) {\n    try {\n      const receipt = await marketplaceContract.methods\n        .buyItem(saleId)\n        .send({ gas: 210000, value: price, from: account });\n      console.log(receipt);\n      const id = receipt.events.itemSold.id; ///saleId\n    } catch (error) {\n      console.error(\"Error, buying: \", error);\n      alert(\"Error while buying!\");\n    }\n  }\n\n  return (\n    <div className={classes.pageItem}>\n      {Object.keys(nft).length === 0 ? (\n        <div>...CARREGANDO</div>\n      ) : (\n        <main>\n          <header className={classes.pageHeader}>\n            <Link to=\"/\">\n              <KeyboardBackspaceIcon fontSize=\"large\" />\n            </Link>\n          </header>\n          <section>\n            <Grid container \n              spacing={0} \n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item md={7} sm={7} xs={12}>\n                <figure> \n                  <img className=\"ui fluid image\" src={image} />\n                </figure>\n              </Grid>\n              <Grid item md={5} sm={5} xs={12}>\n                <fieldset>\n                  <h1>{name}</h1>\n                  <TextField\n                    label=\"creator\"\n                    name=\"creator\"\n                    variant=\"filled\"\n                    margin=\"dense\"\n                    fullWidth\n                    disabled\n                    defaultValue={\n                      creator.slice(0, 7) + \"...\" + creator.slice(-4)\n                    }\n                  />\n                  <TextField\n                    label=\"owner\"\n                    name=\"owner\"\n                    variant=\"filled\"\n                    disabled\n                    fullWidth\n                    margin=\"dense\"\n                    defaultValue={owner.slice(0, 7) + \"...\" + owner.slice(-4)}\n                  />\n                  <TextField\n                    id=\"outlined-multiline-static\"\n                    multiline\n                    rows={4}\n                    label=\"Description\"\n                    name=\"description\"\n                    variant=\"filled\"\n                    margin=\"dense\"\n                    disabled\n                    fullWidth\n                    defaultValue={description}\n                  />\n                  <TextField\n                    label=\"price\"\n                    name=\"price\"\n                    variant=\"filled\"\n                    margin=\"dense\"\n                    defaultValue={Web3.utils.fromWei(String(price), \"ether\")}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">ETH</InputAdornment>\n                      ),\n                    }}\n                    fullWidth\n                    disabled\n                  />\n                  {owner === account && !isForSale && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => putForSale(tokenId, 200)}\n                    >\n                      Sell\n                    </Button>\n                  )}\n                  {owner !== account && isForSale && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => buy(saleId, 200)}\n                    >\n                      Buy\n                    </Button>\n                  )}\n                </fieldset>\n              </Grid>\n            </Grid>\n          </section>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}