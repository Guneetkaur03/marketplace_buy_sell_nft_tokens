{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  nft: [],\n  account: '',\n  artTokenContract: null,\n  marketplaceContract: null\n};\nexport const nftReducer = (state = intialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.SET_NFT:\n      return { ...state,\n        nft: payload\n      };\n\n    case ActionTypes.SET_ACCOUNT:\n      return { ...state,\n        account: payload\n      };\n\n    case ActionTypes.SET_TOKEN_COTRACT:\n      return { ...state,\n        artTokenContract: payload\n      };\n\n    case ActionTypes.SET_MARKET_CONTRACT:\n      return { ...state,\n        marketplaceContract: payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const selectedNftReducer = (state = {}, {\n  type,\n  payload\n}) => {\n  console.log(type);\n\n  switch (type) {\n    case ActionTypes.SELECTED_NFT:\n      return { ...state,\n        ...payload\n      };\n\n    case ActionTypes.REMOVE_SELECTED_NFT:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/guneet/Downloads/Fall2022/Blockchain/myproject/Marketplace/client/src/redux/reducers/nftReducer.js"],"names":["ActionTypes","intialState","nft","account","artTokenContract","marketplaceContract","nftReducer","state","type","payload","SET_NFT","SET_ACCOUNT","SET_TOKEN_COTRACT","SET_MARKET_CONTRACT","selectedNftReducer","console","log","SELECTED_NFT","REMOVE_SELECTED_NFT"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,GAAG,EAAE,EADa;AAElBC,EAAAA,OAAO,EAAE,EAFS;AAGlBC,EAAAA,gBAAgB,EAAE,IAHA;AAIlBC,EAAAA,mBAAmB,EAAE;AAJH,CAApB;AAOA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGN,WAAT,EAAsB;AAAEO,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,KAA4C;AACpE,UAAQD,IAAR;AACE,SAAKR,WAAW,CAACU,OAAjB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYL,QAAAA,GAAG,EAAEO;AAAjB,OAAP;;AAEF,SAAKT,WAAW,CAACW,WAAjB;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,OAAO,EAAEM;AAArB,OAAP;;AAEF,SAAKT,WAAW,CAACY,iBAAjB;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,gBAAgB,EAAEK;AAA9B,OAAP;;AAEF,SAAKT,WAAW,CAACa,mBAAjB;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,mBAAmB,EAAEI;AAAjC,OAAP;;AACF;AACE,aAAOF,KAAP;AAbJ;AAeD,CAhBM;AAkBP,OAAO,MAAMO,kBAAkB,GAAG,CAACP,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AACnEM,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,UAAQA,IAAR;AACE,SAAKR,WAAW,CAACiB,YAAjB;AACE,aAAO,EAAE,GAAGV,KAAL;AAAY,WAAGE;AAAf,OAAP;;AACF,SAAKT,WAAW,CAACkB,mBAAjB;AACE,aAAO,EAAP;;AACF;AACE,aAAOX,KAAP;AANJ;AAQD,CAVM","sourcesContent":["import { ActionTypes } from \"../constants/action-types\";\n\nconst intialState = {\n  nft: [],\n  account: '',\n  artTokenContract: null,\n  marketplaceContract: null\n};\n\nexport const nftReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_NFT:\n      return { ...state, nft: payload };\n\n    case ActionTypes.SET_ACCOUNT:\n      return { ...state, account: payload };\n    \n    case ActionTypes.SET_TOKEN_COTRACT:\n      return { ...state, artTokenContract: payload }; \n\n    case ActionTypes.SET_MARKET_CONTRACT:\n      return { ...state, marketplaceContract: payload };\n    default:\n      return state;\n  }\n};\n\nexport const selectedNftReducer = (state = {}, { type, payload }) => {\n  console.log(type);\n  switch (type) {\n    case ActionTypes.SELECTED_NFT:\n      return { ...state, ...payload };\n    case ActionTypes.REMOVE_SELECTED_NFT:\n      return {};\n    default:\n      return state;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}