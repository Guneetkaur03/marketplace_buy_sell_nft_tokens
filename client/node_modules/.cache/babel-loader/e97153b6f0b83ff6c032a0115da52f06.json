{"ast":null,"code":"var _jsxFileName = \"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Card/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport { useSelector } from \"react-redux\";\nimport { Card as MuiCard } from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { useStyles } from \"./styles.js\";\nimport { ReactComponent as EthereumLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/ethereum_logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  _s();\n  let {\n    tokenId,\n    name,\n    image,\n    price,\n    owner,\n    isSold,\n    creator,\n    isForSale\n  } = _ref;\n  const classes = useStyles();\n  const account = useSelector(state => state.allNft.account);\n  console.log(\"image: \", image);\n  console.log(\"account: \", account);\n  console.log(\"owner: \", owner);\n  console.log(\"creatror: \", creator);\n  console.log(\"is sold:\", isSold);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/nft/${tokenId}`,\n    children: /*#__PURE__*/_jsxDEV(MuiCard, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: name,\n          height: \"240\",\n          image: image,\n          title: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.title,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: \"MuiTypography--heading\",\n              variant: \"h5\",\n              gutterBottom: true,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), isForSale && /*#__PURE__*/_jsxDEV(Chip, {\n              size: \"small\",\n              disabled: true,\n              label: \"Selling\",\n              className: classes.badge\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), !isForSale && /*#__PURE__*/_jsxDEV(Chip, {\n              size: \"small\",\n              disabled: true,\n              label: \"Not Selling Yet\",\n              className: classes.badge\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), isSold && /*#__PURE__*/_jsxDEV(Chip, {\n              size: \"small\",\n              disabled: true,\n              label: \"Not on sale\",\n              className: classes.badge\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.price,\n            children: [/*#__PURE__*/_jsxDEV(SvgIcon, {\n              component: EthereumLogo,\n              viewBox: \"0 0 400 426.6\",\n              titleAccess: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [Web3.utils.fromWei(String(price), \"ether\"), \".120000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider,\n            light: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            align: \"center\",\n            className: classes.seller,\n            children: [owner.slice(0, 7), \"...\", owner.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"pycDyll3joRcuSJ1Ah9v+y88So8=\", false, function () {\n  return [useStyles, useSelector];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","Web3","useSelector","Card","MuiCard","Chip","SvgIcon","Divider","CardMedia","Typography","CardContent","CardActionArea","useStyles","tokenId","name","image","price","owner","isSold","creator","isForSale","classes","account","state","allNft","console","log","root","content","title","badge","EthereumLogo","utils","fromWei","String","divider","seller","slice"],"sources":["/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Card/index.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nimport {useSelector } from \"react-redux\";\n\nimport { Card as MuiCard } from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport { useStyles } from \"./styles.js\";\nimport { ReactComponent as EthereumLogo } from \"../../assets/ethereum_logo.svg\";\n\nconst Card = ({ tokenId, name, image, price, owner, isSold, creator, isForSale}) => {\n  const classes = useStyles();\n  const account = useSelector((state) => state.allNft.account);\n\n  console.log(\"image: \", image);\n  console.log(\"account: \", account);\n  console.log(\"owner: \", owner);\n  console.log(\"creatror: \", creator);\n  console.log(\"is sold:\", isSold);\n\n  return (\n    <Link to={`/nft/${tokenId}`}>\n      <MuiCard className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt={name}\n            height=\"240\"\n            image={image}\n            title={name}\n          />\n          <CardContent className={classes.content}>\n            <div className={classes.title}>\n              <Typography\n                className={\"MuiTypography--heading\"}\n                variant={\"h5\"}\n                gutterBottom\n              >\n                {name}\n              </Typography>\n\n              {isForSale && (\n                <Chip\n                    size=\"small\"\n                    disabled={true}\n                    label=\"Selling\"\n                    className={classes.badge}\n                />\n              )}\n              {!isForSale && (\n                <Chip\n                    size=\"small\"\n                    disabled={true}\n                    label=\"Not Selling Yet\"\n                    className={classes.badge}\n                />\n              )}\n              {isSold && (\n                    <Chip\n                        size=\"small\"\n                        disabled={true}\n                        label=\"Not on sale\"\n                        className={classes.badge}\n                    />\n                )}\n            </div>\n            <Typography variant=\"h6\" className={classes.price}>\n              <SvgIcon\n                component={EthereumLogo}\n                viewBox=\"0 0 400 426.6\"\n                titleAccess=\"ETH\"\n              />\n              <span>{Web3.utils.fromWei(String(price), \"ether\")}.120000</span>\n            </Typography>\n            <Divider className={classes.divider} light />\n            <Typography\n              variant={\"body1\"}\n              align={\"center\"}\n              className={classes.seller}\n            >\n              {owner.slice(0, 7)}...{owner.slice(-4)}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </MuiCard>\n    </Link>\n  );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}