[{"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/index.js":"1","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/App.js":"2","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/store.js":"3","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/reducers/index.js":"4","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Header/index.js":"5","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/CreateNFT/index.js":"6","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Home/index.js":"7","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Item/index.js":"8","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Header/styles.js":"9","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/CreateNFT/styles.js":"10","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Home/styles.js":"11","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Item/styles.js":"12","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/reducers/nftReducer.js":"13","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/services/api.js":"14","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/utils/getWeb3.js":"15","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/actions/nftActions.js":"16","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/DropZone/index.js":"17","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Card/index.js":"18","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/constants/action-types.js":"19","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/DropZone/styles.js":"20","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Card/styles.js":"21"},{"size":319,"mtime":1669502672983,"results":"22","hashOfConfig":"23"},{"size":688,"mtime":1669502672877,"results":"24","hashOfConfig":"23"},{"size":230,"mtime":1669502672985,"results":"25","hashOfConfig":"23"},{"size":219,"mtime":1669502672984,"results":"26","hashOfConfig":"23"},{"size":1344,"mtime":1670574421178,"results":"27","hashOfConfig":"23"},{"size":4339,"mtime":1670654468396,"results":"28","hashOfConfig":"23"},{"size":8216,"mtime":1670728554146,"results":"29","hashOfConfig":"23"},{"size":5662,"mtime":1670657402793,"results":"30","hashOfConfig":"23"},{"size":595,"mtime":1670658304535,"results":"31","hashOfConfig":"23"},{"size":1046,"mtime":1670658474274,"results":"32","hashOfConfig":"23"},{"size":1595,"mtime":1670658639216,"results":"33","hashOfConfig":"23"},{"size":1267,"mtime":1669502672984,"results":"34","hashOfConfig":"23"},{"size":930,"mtime":1669502672985,"results":"35","hashOfConfig":"23"},{"size":124,"mtime":1669502672985,"results":"36","hashOfConfig":"23"},{"size":1299,"mtime":1669502672985,"results":"37","hashOfConfig":"23"},{"size":781,"mtime":1669502672984,"results":"38","hashOfConfig":"23"},{"size":1032,"mtime":1669502672970,"results":"39","hashOfConfig":"23"},{"size":3114,"mtime":1670655958907,"results":"40","hashOfConfig":"23"},{"size":249,"mtime":1669502672984,"results":"41","hashOfConfig":"23"},{"size":845,"mtime":1670658456101,"results":"42","hashOfConfig":"23"},{"size":1091,"mtime":1670642838948,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"n1dlca",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/index.js",[],["88","89"],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/App.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/store.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/reducers/index.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Header/index.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/CreateNFT/index.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Home/index.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Item/index.js",["90","91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Web3 from \"web3\";\n\nimport { selectedNft, removeSelectedNft } from \"../../redux/actions/nftActions\";\n\nimport { useStyles } from \"./styles.js\";\n\nconst Item = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { nftId } = useParams();\n  const marketplaceContract = useSelector(\n    (state) => state.allNft.marketplaceContract\n  );\n  const account = useSelector((state) => state.allNft.account);\n  let nft = useSelector((state) => state.nft);\n  let nftItem = useSelector((state) =>\n    state.allNft.nft.filter((nft) => nft.tokenId === nftId)\n  );\n  const {\n    image,\n    name,\n    price,\n    owner,\n    creator,\n    description,\n    tokenId,\n    saleId,\n    isForSale,\n    isSold,\n  } = nft;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (nftId && nftId !== \"\" && nftItem) dispatch(selectedNft(nftItem[0]));\n    return () => {\n      dispatch(removeSelectedNft());\n    };\n  }, [nftId]);\n\n  async function putForSale(id, price) {\n    try {\n      // const itemIdex = getItemIndexBuyTokenId(id);\n\n      // const marketAddress = ArtMarketplace.networks[1337].address;\n      // await artTokenContract.methods.approve(marketAddress, items[itemIdex].tokenId).send({from: accounts[0]});\n\n      const receipt = await marketplaceContract.methods\n        .putTokenOnSale(id, price)\n        .send({ gas: 210000, from: account });\n      console.log(receipt);\n    } catch (error) {\n      console.error(\"Error, puting for sale: \", error);\n      alert(\"Error while puting for sale!\");\n    }\n    history.push('/');\n  }\n\n  async function buy(saleId, price) {\n    try {\n      const receipt = await marketplaceContract.methods\n        .buyToken(saleId)\n        .send({ gas: 210000, value: price, from: account });\n      console.log(receipt);\n      const id = receipt.events.tokenSold.id; ///saleId\n    } catch (error) {\n      console.error(\"Error, buying: \", error);\n      alert(\"Error while buying!\");\n    }\n    history.push('/');\n  }\n\n  return (\n    <div className={classes.pageItem}>\n      {Object.keys(nft).length === 0 ? (\n        <div>...CARREGANDO</div>\n      ) : (\n        <main>\n          <header className={classes.pageHeader}>\n            <Link to=\"/\">\n              <KeyboardBackspaceIcon fontSize=\"large\" />\n            </Link>\n          </header>\n          <section>\n            <Grid container \n              spacing={0} \n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item md={7} sm={7} xs={12}>\n                <figure> \n                  <img className=\"ui fluid image\" src={image} />\n                </figure>\n              </Grid>\n              <Grid item md={5} sm={5} xs={12}>\n                <fieldset>\n                  <h1>{name}</h1>\n                  <TextField\n                    label=\"creator\"\n                    name=\"creator\"\n                    variant=\"filled\"\n                    margin=\"dense\"\n                    fullWidth\n                    disabled\n                    defaultValue={\n                      creator.slice(0, 7) + \"...\" + creator.slice(-4)\n                    }\n                  />\n                  <TextField\n                    label=\"owner\"\n                    name=\"owner\"\n                    variant=\"filled\"\n                    disabled\n                    fullWidth\n                    margin=\"dense\"\n                    defaultValue={owner.slice(0, 7) + \"...\" + owner.slice(-4)}\n                  />\n                  <TextField\n                    id=\"outlined-multiline-static\"\n                    multiline\n                    rows={4}\n                    label=\"Description\"\n                    name=\"description\"\n                    variant=\"filled\"\n                    margin=\"dense\"\n                    disabled\n                    fullWidth\n                    defaultValue={description}\n                  />\n                  <TextField\n                    label=\"price\"\n                    name=\"price\"\n                    variant=\"filled\"\n                    margin=\"dense\"\n                    defaultValue={Web3.utils.fromWei(String(price), \"ether\")}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">ETH</InputAdornment>\n                      ),\n                    }}\n                    fullWidth\n                    disabled\n                  />\n                  {owner === account && !isSold && !isForSale && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => putForSale(tokenId, 200)}\n                    >\n                      Sell\n                    </Button>\n                  )}\n                  {owner !== account && isForSale && !isSold &&(\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => buy(saleId, 200)}\n                    >\n                      Buy\n                    </Button>\n                  )}\n                </fieldset>\n              </Grid>\n            </Grid>\n          </section>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default Item;\n","/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Header/styles.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/CreateNFT/styles.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Home/styles.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/pages/Item/styles.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/reducers/nftReducer.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/services/api.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/utils/getWeb3.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/actions/nftActions.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/DropZone/index.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Card/index.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/redux/constants/action-types.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/DropZone/styles.js",[],"/Users/guneet/Downloads/Fall2022/myproject/Marketplace/client/src/components/Card/styles.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":46,"column":6,"nodeType":"104","endLine":46,"endColumn":13,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":72,"column":13,"nodeType":"100","messageId":"101","endLine":72,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":99,"column":19,"nodeType":"109","endLine":99,"endColumn":65},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'nftItem'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, nftId, nftItem]",{"range":"115","text":"116"},[1376,1383],"[dispatch, nftId, nftItem]"]